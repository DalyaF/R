[["index.html", "Analyse des données de la population, de la production de nourriture et de la consommation d’énergie Chapter 1 Introduction", " Analyse des données de la population, de la production de nourriture et de la consommation d’énergie Dalya - Ikram 2022-06-24 Chapter 1 Introduction Dans cette partie l’évolution temporelle de la population, de la production de nourriture et de la consommation d’énergie sont présentés sous forme graphique. Les trois graphiques représentant l’évolution de puis 1961 de la population, la production de nourriture et la consommation d’énergie à l’échelle mondiale. Pour la production de nourriture, nous avons conserver que les aliments de base (se terminant par “, total”) et pour la consommation d’énergie nous avons fait un graphique par source d’énergie (pétrole, électricité, etc.) et par type d’énergie (renouvelable, fossile, etc.). Pour l’énergie nous avons récupérer uniquement les colonnes consommation: Le graphe 1.1 représente l’évolution temporelle de la population entre 1961-2020 à l’échelle mondiale "],["analyse-mondiale.html", "Chapter 2 ANALYSE MONDIALE 2.1 POPULATION 2.2 ENERGIE 2.3 NOURRITURE", " Chapter 2 ANALYSE MONDIALE 2.1 POPULATION population&lt;- read_delim(&quot;WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.csv&quot;, skip=16, na=&quot;...&quot;) ## Rows: 285 Columns: 78 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;;&quot; ## chr (75): Estimates, Less developed regions, c, Development Group, 1 721 612... ## dbl (3): 4, 902, 1803 ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. population&lt;-read_excel(&quot;WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.xlsx&quot;, skip = 16, na=&quot;...&quot;) |&gt; select(1:3, Type,&quot;1950&quot;:&quot;2020&quot; ) |&gt; pivot_longer(cols=5:75, names_to =&quot;annee&quot;, values_to = &quot;population&quot;) |&gt; mutate(population=population*1000) |&gt; rename(region=3) population_monde &lt;-population |&gt; filter(Type==&quot;World&quot;) |&gt; filter(annee &gt;= 1961) |&gt; mutate(annee=(as.numeric(annee))) # on ne filtre que les données du monde ggplot(population_monde) + aes(annee, population) + geom_point() + geom_line(aes(group=1)) + scale_x_continuous( trans=&#39;log10&#39;) + scale_y_continuous(labels=function(x) { format(x,scientific=TRUE, big.mark=&quot; &quot;) })+ theme(axis.text.x=element_text(size=12, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=12, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;)) 2.2 ENERGIE library(tidyselect) energy&lt;-read_delim(&quot;owid-energy-data__OWID.csv&quot;) ## Rows: 17470 Columns: 124 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): iso_code, country ## dbl (122): year, coal_prod_change_pct, coal_prod_change_twh, gas_prod_change... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seqTp_energy &lt;- energy |&gt; select(1:3,contains(&quot;consumption&quot;)) |&gt; filter(year &gt;= 1961 &amp; year &lt;= 2020) |&gt; pivot_longer(cols=4:16, names_to=&quot;type_energie&quot;, values_to=&quot;consommation&quot;) |&gt; mutate(types = case_when(str_detect(type_energie,&quot;coal|gas|oil&quot;)~&quot;fossil_fuel_consumption&quot;, str_detect(type_energie,&quot;nuclear|biofuel|hydro|other_renewable|solar|wind&quot;)~&quot;low_carbon_consumption&quot;, TRUE~NA_character_)) |&gt; mutate(sources_energy = case_when(str_detect(type_energie,&quot;biofuel&quot;)~&quot;biofuel&quot;, str_detect(type_energie,&quot;coal&quot;)~&quot;coal&quot;, str_detect(type_energie,&quot;wind&quot;)~&quot;wind&quot;, str_detect(type_energie,&quot;gas&quot;)~&quot;gas&quot;, str_detect(type_energie,&quot;hydro&quot;)~&quot;hydro&quot;, str_detect(type_energie,&quot;solar&quot;)~&quot;solar&quot;, str_detect(type_energie,&quot;nuclear&quot;)~&quot;nuclear&quot;, str_detect(type_energie,&quot;oil&quot;)~&quot;oil&quot;, str_detect(type_energie,&quot;other_renewable&quot;)~&quot;other_renewable_consumption&quot; )) energy_source&lt;- seqTp_energy |&gt; filter(country==&quot;World&quot;) |&gt; drop_na(types) |&gt; rename(annee=&#39;year&#39;) ggplot(energy_source )+ aes(annee,consommation,colour=sources_energy, fill=sources_energy)+ geom_col()+ facet_grid(~types)+ labs(x=&quot;Annee&quot;, y=&quot;Consommation (TWh)&quot;)+ theme(axis.text.x=element_text(size=14, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=14, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;), ) ## Warning: Removed 41 rows containing missing values (position_stack). 2.3 NOURRITURE guess_encoding(&quot;Production_Crops_Livestock_E_All_Data.csv&quot;) ## # A tibble: 1 × 2 ## encoding confidence ## &lt;chr&gt; &lt;dbl&gt; ## 1 ISO-8859-1 0.28 food&lt;-read_delim(&quot;Production_Crops_Livestock_E_All_Data.csv&quot;, locale=locale(encoding=&quot;ISO-8859-1&quot;)) |&gt; select(-ends_with(&quot;F&quot;)) |&gt; pivot_longer(cols=Y1961:Y2020, names_to=&quot;annee&quot;, values_to=&quot;valeur&quot;) |&gt; mutate(annee=parse_number(annee)) ## Rows: 77523 Columns: 127 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (64): Area, Item, Element, Unit, Y1961F, Y1962F, Y1963F, Y1964F, Y1965F,... ## dbl (63): Area Code, Item Code, Element Code, Y1961, Y1962, Y1963, Y1964, Y1... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # on ne conserve que les monde, que la production (colonne Element) et que la nourriture de base (finissant par Total et Primary dans colonne Item) food_world&lt;-food |&gt; filter(Area==&quot;World&quot;, Element==&quot;Production&quot;) |&gt; filter(str_detect(Item,&quot;Total&quot;)|str_detect(Item,&quot;Primary&quot;)) ggplot(food_world)+ aes(annee,valeur,colour=Item)+ geom_point()+ geom_line()+ theme(axis.text.x=element_text(size=12, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=12, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;)) "],["analyse-par-continent.html", "Chapter 3 ANALYSE PAR CONTINENT 3.1 POPULATION 3.2 ENERGIE 3.3 NOURRITURE 3.4 POPULATION 3.5 ENERGIE", " Chapter 3 ANALYSE PAR CONTINENT 3.1 POPULATION # exploration des colonnes caractérisant la production population&lt;-read_excel(&quot;WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.xlsx&quot;, skip = 16, na=&quot;...&quot;) |&gt; select(1:3, Type,&quot;1950&quot;:&quot;2020&quot; ) |&gt; pivot_longer(cols=5:75, names_to =&quot;annee&quot;, values_to = &quot;population&quot;) |&gt; mutate(population=population*1000) |&gt; rename(region=3) |&gt; filter(annee&gt;=1961) population_continent&lt;-population |&gt; select(annee, population, region) |&gt; mutate(continent=countrycode(region, origin = &quot;country.name&quot;, destination = &quot;continent&quot;)) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Africa, Asia, AUSTRALIA/NEW ZEALAND, Caribbean, Central America, CENTRAL AND SOUTHERN ASIA, Central Asia, Channel Islands, Eastern Africa, EASTERN AND SOUTH-EASTERN ASIA, Eastern Asia, Eastern Europe, Europe, EUROPE, EUROPE AND NORTHERN AMERICA, Geographic regions, High-income countries, Land-locked Developing Countries (LLDC), Latin America and the Caribbean, LATIN AMERICA AND THE CARIBBEAN, Least developed countries, Less developed regions, Less developed regions, excluding least developed countries, Low-income countries, Lower-middle-income countries, Melanesia, Micronesia, Middle-income countries, Middle Africa, More developed regions, No income group available, Northern Africa, NORTHERN AFRICA AND WESTERN ASIA, Northern America, NORTHERN AMERICA, Northern Europe, Oceania, OCEANIA (EXCLUDING AUSTRALIA AND NEW ZEALAND), Polynesia, Small Island Developing States (SIDS), South-Eastern Asia, South America, Southern Africa, Southern Asia, Southern Europe, SUB-SAHARAN AFRICA, Sustainable Development Goal (SDG) regions, UN development groups, Upper-middle-income countries, Western Africa, Western Asia, Western Europe, WORLD, World Bank income groups ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some strings were matched more than once, and therefore set to &lt;NA&gt; in the result: AUSTRALIA/NEW ZEALAND,Oceania,Oceania; OCEANIA (EXCLUDING AUSTRALIA AND NEW ZEALAND),Oceania,Oceania ggplot(population_continent |&gt; mutate(annee=(as.numeric(annee))) |&gt; drop_na(continent)) + aes(annee, population,fill=continent) + geom_col()+ scale_x_continuous( trans=&#39;log10&#39;) + scale_y_continuous(labels=function(x) { format(x,scientific=FALSE, big.mark=&quot; &quot;) }) 3.2 ENERGIE energy_continent&lt;- seqTp_energy |&gt; mutate(continent=countrycode(country, origin = &quot;country.name&quot;, destination = &quot;continent&quot;))|&gt; rename(annee=&quot;year&quot;) |&gt; mutate(annee=(as.numeric(annee))) |&gt; drop_na(continent) |&gt; drop_na(types) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Africa, Asia Pacific, Central America, CIS, Czechoslovakia, Eastern Africa, Europe, Europe (other), Kosovo, Middle Africa, Middle East, North America, OPEC, Other Asia &amp; Pacific, Other Caribbean, Other CIS, Other Middle East, Other Northern Africa, Other South America, Other Southern Africa, South &amp; Central America, Timor, United States Pacific Islands, Western Africa, World, Yugoslavia #pour véréfier na dans continent test_continent &lt;- energy_continent |&gt; distinct(continent,country) #vérifier les na dans types test_continent_types &lt;- energy_continent |&gt; distinct(type_energie,sources_energy,types) ggplot(energy_continent )+ aes(annee,consommation,fill=continent)+ geom_col()+ facet_grid(~types)+ labs(x=&quot;Annee&quot;, y=&quot;Consommation (TWh)&quot;)+ theme(axis.text.x=element_text(size=14, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=14, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;)) ## Warning: Removed 55123 rows containing missing values (position_stack). ggplot(energy_continent )+ aes(annee,consommation,fill=sources_energy)+ geom_col()+ facet_grid(~continent)+ labs(x=&quot;Annee&quot;, y=&quot;Consommation (TWh)&quot;)+ theme(axis.text.x=element_text(size=14, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=14, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;)) ## Warning: Removed 55123 rows containing missing values (position_stack). 3.3 NOURRITURE food&lt;-read_delim(&quot;Production_Crops_Livestock_E_All_Data.csv&quot;, locale=locale(encoding=&quot;ISO-8859-1&quot;)) |&gt; select(-ends_with(&quot;F&quot;)) |&gt; pivot_longer(cols=Y1961:Y2020, names_to=&quot;annee&quot;, values_to=&quot;Production_norriture&quot;) |&gt; mutate(annee=parse_number(annee)) |&gt; mutate(continent=countrycode(Area, origin = &quot;country.name&quot;, destination = &quot;continent&quot;)) |&gt; drop_na(continent) ## Rows: 77523 Columns: 127 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (64): Area, Item, Element, Unit, Y1961F, Y1962F, Y1963F, Y1964F, Y1965F,... ## dbl (63): Area Code, Item Code, Element Code, Y1961, Y1962, Y1963, Y1964, Y1... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Africa, Americas, Asia, Australia and New Zealand, Belgium-Luxembourg, Caribbean, Central America, Central Asia, Czechoslovakia, Eastern Africa, Eastern Asia, Eastern Europe, Europe, European Union (27), Land Locked Developing Countries, Least Developed Countries, Low Income Food Deficit Countries, Melanesia, Micronesia, Middle Africa, Net Food Importing Developing Countries, Northern Africa, Northern America, Northern Europe, Oceania, Polynesia, Serbia and Montenegro, Small Island Developing States, South-eastern Asia, South America, Southern Africa, Southern Asia, Southern Europe, Western Africa, Western Asia, Western Europe, World, Yugoslav SFR ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some strings were matched more than once, and therefore set to &lt;NA&gt; in the result: Australia and New Zealand,Oceania,Oceania food_continent &lt;-food |&gt; filter(Element==&quot;Production&quot;) |&gt; filter(str_detect(Item,&quot;Total&quot;)|str_detect(Item,&quot;Primary&quot;)) ggplot(food_continent)+ aes(annee,Production_norriture,colour=continent, fill=continent)+ geom_col()+ labs(x=&quot;Annee&quot;, y=&quot;Production de norriture (tonnes)&quot;)+ theme(axis.text.x=element_text(size=12, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=12, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;)) ## Warning: Removed 16240 rows containing missing values (position_stack). ggplot(food_continent )+ aes(annee,Production_norriture,fill=Item)+ geom_col()+ facet_grid(~continent)+ labs(x=&quot;Annee&quot;, y=&quot;Production de norriture (tonnes)&quot;)+ theme(axis.text.x=element_text(size=14, angle=45, hjust=1, vjust=1), axis.text.y=element_text(size=14, hjust=1, vjust=1), strip.text.x=element_text(colour=&quot;black&quot;, face=&quot;bold&quot;), axis.text=element_text(size=12), axis.title=element_text(size=14,face=&quot;bold&quot;)) ## Warning: Removed 16240 rows containing missing values (position_stack). # ANALYSE PAR PAYS 3.4 POPULATION population&lt;-read_excel(&quot;WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.xlsx&quot;, skip = 16, na=&quot;...&quot;) |&gt; select(1:3, Type,&quot;1950&quot;:&quot;2020&quot; ) |&gt; pivot_longer(cols=5:75, names_to =&quot;annee&quot;, values_to = &quot;population&quot;) |&gt; mutate(population=population*1000) |&gt; rename(region=3) population_country&lt;-population |&gt; select(annee, population, region) |&gt; mutate(country=countrycode(region, origin = &quot;country.name&quot;, destination = &quot;country.name&quot;)) |&gt; drop_na(country) |&gt; mutate(annee=(as.numeric(annee))) |&gt; filter(annee == 2020) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Africa, Asia, AUSTRALIA/NEW ZEALAND, Caribbean, Central America, CENTRAL AND SOUTHERN ASIA, Central Asia, Eastern Africa, EASTERN AND SOUTH-EASTERN ASIA, Eastern Asia, Eastern Europe, Europe, EUROPE, EUROPE AND NORTHERN AMERICA, Geographic regions, High-income countries, Land-locked Developing Countries (LLDC), Latin America and the Caribbean, LATIN AMERICA AND THE CARIBBEAN, Least developed countries, Less developed regions, Less developed regions, excluding least developed countries, Low-income countries, Lower-middle-income countries, Melanesia, Micronesia, Middle-income countries, Middle Africa, More developed regions, No income group available, Northern Africa, NORTHERN AFRICA AND WESTERN ASIA, Northern America, NORTHERN AMERICA, Northern Europe, Oceania, OCEANIA (EXCLUDING AUSTRALIA AND NEW ZEALAND), Polynesia, Small Island Developing States (SIDS), South-Eastern Asia, South America, Southern Africa, Southern Asia, Southern Europe, SUB-SAHARAN AFRICA, Sustainable Development Goal (SDG) regions, UN development groups, Upper-middle-income countries, Western Africa, Western Asia, Western Europe, WORLD, World Bank income groups ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some strings were matched more than once, and therefore set to &lt;NA&gt; in the result: AUSTRALIA/NEW ZEALAND,Australia,New Zealand; OCEANIA (EXCLUDING AUSTRALIA AND NEW ZEALAND),Australia,New Zealand #la carte world_map &lt;- map_data(&quot;world&quot;) |&gt; mutate(country=countrycode(region, origin = &quot;country.name&quot;, destination = &quot;country.name&quot;)) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Ascension Island, Azores, Barbuda, Bonaire, Canary Islands, Chagos Archipelago, Grenadines, Heard Island, Madeira Islands, Micronesia, Saba, Saint Martin, Siachen Glacier, Sint Eustatius, Virgin Islands #fusionner les données lat/long avec les données gapminder population_carte &lt;- world_map |&gt; mutate(group=factor(group), region=factor(region)) |&gt; full_join(population_country,by=&quot;country&quot;) test_population &lt;- population_country |&gt; distinct(country) # carte choroplethe ggplot(population_carte)+ aes(long,lat,group=group)+ geom_polygon(aes(fill=population),colour=&quot;black&quot;) 3.5 ENERGIE #Partie Energie #la carte world_map &lt;- map_data(&quot;world&quot;) |&gt; mutate(country=countrycode(region, origin = &quot;country.name&quot;, destination = &quot;country.name&quot;)) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Ascension Island, Azores, Barbuda, Bonaire, Canary Islands, Chagos Archipelago, Grenadines, Heard Island, Madeira Islands, Micronesia, Saba, Saint Martin, Siachen Glacier, Sint Eustatius, Virgin Islands energy&lt;-read_delim(&quot;owid-energy-data__OWID.csv&quot;) ## Rows: 17470 Columns: 124 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): iso_code, country ## dbl (122): year, coal_prod_change_pct, coal_prod_change_twh, gas_prod_change... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seqTp_energy &lt;- energy |&gt; select(1:3,contains(&quot;consumption&quot;)) |&gt; filter(year &gt;= 1961 &amp; year &lt;= 2020) |&gt; pivot_longer(cols=4:16, names_to=&quot;type_energie&quot;, values_to=&quot;consommation&quot;) |&gt; mutate(types = case_when(str_detect(type_energie,&quot;coal|gas|oil&quot;)~&quot;fossil_fuel_consumption&quot;, str_detect(type_energie,&quot;nuclear|biofuel|hydro|other_renewable|solar|wind&quot;)~&quot;low_carbon_consumption&quot;, TRUE~NA_character_)) |&gt; mutate(sources_energy = case_when(str_detect(type_energie,&quot;biofuel&quot;)~&quot;biofuel&quot;, str_detect(type_energie,&quot;coal&quot;)~&quot;coal&quot;, str_detect(type_energie,&quot;wind&quot;)~&quot;wind&quot;, str_detect(type_energie,&quot;gas&quot;)~&quot;gas&quot;, str_detect(type_energie,&quot;hydro&quot;)~&quot;hydro&quot;, str_detect(type_energie,&quot;solar&quot;)~&quot;solar&quot;, str_detect(type_energie,&quot;nuclear&quot;)~&quot;nuclear&quot;, str_detect(type_energie,&quot;oil&quot;)~&quot;oil&quot;, str_detect(type_energie,&quot;other_renewable&quot;)~&quot;other_renewable_consumption&quot; )) energy_country&lt;- seqTp_energy |&gt; rename(annee=&quot;year&quot;) |&gt; mutate(annee=(as.numeric(annee))) |&gt; drop_na(types)|&gt; mutate(iso_code=countrycode(country, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;)) |&gt; drop_na(iso_code) |&gt; mutate(country=countrycode(iso_code, origin = &quot;iso3c&quot;, destination = &quot;country.name&quot;)) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Africa, Asia Pacific, Central America, CIS, Czechoslovakia, Eastern Africa, Europe, Europe (other), Kosovo, Middle Africa, Middle East, Netherlands Antilles, North America, OPEC, Other Asia &amp; Pacific, Other Caribbean, Other CIS, Other Middle East, Other Northern Africa, Other South America, Other Southern Africa, South &amp; Central America, Timor, United States Pacific Islands, Western Africa, World, Yugoslavia test_energy_country &lt;- energy_country |&gt; distinct(country) #fusionner les données lat/long avec les données gapminder energy_carte &lt;- world_map |&gt; mutate(group=factor(group), region=factor(region)) |&gt; full_join(energy_country,by=&quot;country&quot;) # carte choroplethe #type = low_carbon_consumption ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(types ==&quot;low_carbon_consumption&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 3.5.1 Distribution de l’énergie de type fossil_fuel par pays en 2015 #type = fossil_fuel_consumption ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(types ==&quot;fossil_fuel_consumption&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 3.5.2 Distribution de l’énergie d’origine biofuel par pays en 2015 #source = biofuel ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;biofuel&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 3.5.3 Distribution de l’énergie d’origine charbone par pays en 2015 #source = coal ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;coal&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 3.5.4 Distribution de l’énergie d’origine gaz par pays en 2015 #source = gas ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;gas&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 3.5.5 Distribution de l’énergie d’origine hydro par pays en 2015 #source = hydro ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;hydro&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) "],["energie-par-sources-2.html", "Chapter 4 Energie par sources 2 4.1 NOURRITURE", " Chapter 4 Energie par sources 2 4.0.1 Distribution de l’énergie d’origine nuclear par pays en 2015 #source = nuclear ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;nuclear&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 4.0.2 Distribution de l’énergie d’origine oil par pays en 2015 #source = oil ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;oil&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 4.0.3 Distribution de l’énergie de source solar par pays en 2015 #source = solar ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;solar&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 4.0.4 Distribution de l’énergie de source wind par pays en 2015 #source = wind ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;wind&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 4.0.5 Distribution de l’énergie de source other_renewable_consumption par pays en 2015 #source = other_renewable_consumption ggplot(energy_carte |&gt; filter(annee==2015) |&gt; filter(sources_energy ==&quot;other_renewable_consumption&quot;))+ aes(long,lat,group=group)+ geom_polygon(aes(fill=consommation),colour=&quot;black&quot;) 4.1 NOURRITURE #Partie food food&lt;-read_delim(&quot;Production_Crops_Livestock_E_All_Data.csv&quot;, locale=locale(encoding=&quot;ISO-8859-1&quot;)) |&gt; select(-ends_with(&quot;F&quot;)) |&gt; pivot_longer(cols=Y1961:Y2020, names_to=&quot;annee&quot;, values_to=&quot;Production_nourriture&quot;) |&gt; mutate(annee=parse_number(annee)) |&gt; filter(annee ==2020) ## Rows: 77523 Columns: 127 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (64): Area, Item, Element, Unit, Y1961F, Y1962F, Y1963F, Y1964F, Y1965F,... ## dbl (63): Area Code, Item Code, Element Code, Y1961, Y1962, Y1963, Y1964, Y1... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. food_country &lt;-food |&gt; filter(Element==&quot;Production&quot;) |&gt; filter(str_detect(Item,&quot;Total&quot;)|str_detect(Item,&quot;Primary&quot;)) |&gt; rename(country=Area) |&gt; rename(Area_code=&quot;Area Code&quot;) |&gt; mutate(Area_code=(as.factor(Area_code))) |&gt; mutate(Area_code=countrycode(country, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;)) |&gt; drop_na(Area_code) |&gt; mutate(country=countrycode(Area_code, origin = &quot;iso3c&quot;, destination = &quot;country.name&quot;)) ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Africa, Americas, Asia, Australia and New Zealand, Belgium-Luxembourg, Caribbean, Central America, Central Asia, Czechoslovakia, Eastern Africa, Eastern Asia, Eastern Europe, Europe, European Union (27), Land Locked Developing Countries, Least Developed Countries, Low Income Food Deficit Countries, Melanesia, Micronesia, Middle Africa, Net Food Importing Developing Countries, Northern Africa, Northern America, Northern Europe, Oceania, Polynesia, Serbia and Montenegro, Small Island Developing States, South-eastern Asia, South America, Southern Africa, Southern Asia, Southern Europe, Western Africa, Western Asia, Western Europe, World, Yugoslav SFR ## Warning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some strings were matched more than once, and therefore set to &lt;NA&gt; in the result: Australia and New Zealand,AUS,NZL #fusionner les données lat/long avec les données gapminder food_carte &lt;- world_map |&gt; mutate(group=factor(group), region=factor(region)) |&gt; full_join(food_country,by=&quot;country&quot;) # carte choroplethe ggplot(food_carte)+ aes(long,lat,group=group)+ geom_polygon(aes(fill=Production_nourriture),colour=&quot;black&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
